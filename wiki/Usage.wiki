#labels Featured,Phase-Implementation,Phase-Deploy
#Usage of the Base64 encoding function.

= Introduction =

See the following example code for a usage example.<br/>The base64_encode function is a very simple implementation, which is easy to use. The code comments should explain everything.

= Example =

<code>#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// We need to include the header to use the encode function
#include "base64.h"

// The main loop 
int main(int argc, char **argv)
{
    char *out;
    int len;
    
    // Check argument count, if no string is given, print usage message
    if(argc < 2 )
    {
        printf("usage %s <string>\n", argv[0]);
        exit(1);
    }
	
    // We have a string, so let's allocate memory for it
    len = strlen(argv[1]);
    out = malloc(strlen(argv[1]);

    // Here we put the result of the b64_encode function in 
    // the memory location we just allocated.
	// The first argument is the string to encode, the second is the
	// length of the string.
	// That's all! After that we have the encrypted string in our 
	// variable and: Yes, it's that simple!
	
	out = b64_encode(argv[1], strlen(argv[1]));
	
	// Print out the result and the origin to make sure everything is okay
	printf("Base64 (%s): %s\nOld len: %d\nNew len: %d\n", argv[1], out, strlen(argv[1]), strlen(out));	

	// Clean up and return 
	free(out);
	return 0;
}
</code>